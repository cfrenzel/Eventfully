// <auto-generated />
using System;
using Eventfully.EFCoreOutbox.IntegrationTests;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Eventfully.EFCoreOutbox.IntegrationTests.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200106191125_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Eventfully.EFCoreOutbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime>("CreatedAtUtc");

                    b.Property<string>("Endpoint")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("ExpiresAtUtc");

                    b.Property<DateTime>("PriorityDateUtc");

                    b.Property<int>("Status");

                    b.Property<int>("TryCount");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("PriorityDateUtc", "Status")
                        .HasName("IX_PriorityDateUtc")
                        .HasAnnotation("SqlServer:Include", new[] { "TryCount", "Type", "ExpiresAtUtc", "CreatedAtUtc", "Endpoint" });

                    b.ToTable("OutboxMessages");
                });

            modelBuilder.Entity("Eventfully.EFCoreOutbox.OutboxMessage+OutboxMessageData", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<byte[]>("Data")
                        .IsRequired();

                    b.Property<string>("MetaData");

                    b.HasKey("Id");

                    b.ToTable("OutboxMessageData");
                });

            modelBuilder.Entity("Eventfully.EFCoreOutbox.OutboxMessage+OutboxMessageData", b =>
                {
                    b.HasOne("Eventfully.EFCoreOutbox.OutboxMessage")
                        .WithOne("MessageData")
                        .HasForeignKey("Eventfully.EFCoreOutbox.OutboxMessage+OutboxMessageData", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
